# -*- coding: utf-8 -*-
"""TitanicSurvivalPrediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xu_7bVmzAgZnuPRvdZp1lb_MfmxWjQFg

Import libraries
"""

import pandas as pd
import numpy as np

"""choose dataset from file directory"""

from google.colab import files
uploaded = files.upload()

"""Load dataset"""

dataset = pd.read_csv('titanicsurvival dataset.csv')

print(dataset.shape)
print(dataset.head(5))

"""Mapping text data to binary value"""

income_set = set(dataset['Sex'])
dataset['Sex'] = dataset['Sex'].map({'female': 0,'male': 1}).astype(int)
print(dataset.head)

"""Sggregte dataset as X and Y"""

x = dataset.drop('Survived',axis = 'columns')
print(x)
y = dataset.Survived
print(y)

"""Find and remove NA values"""

x.columns[x.isna().any()] #check any null value

x.Age = x.Age.fillna(x.Age.mean()) # replace null value by mean value

x.columns[x.isna().any()] #check any null value

"""Splitting train and test"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)

from sklearn.naive_bayes import GaussianNB
model = GaussianNB()
model.fit(x_train,y_train)

pclass = int(input("Enter Person's pclass number :"))
gender = int(input("Enter Person's gender 0 -> female and 1 -> male :"))
age = int(input("Enter Person's age :"))
fare = float(input("Enter Person's fare :"))
person = [[pclass,gender,age,fare]]
result = model.predict(person)
print(result)

if result == 1:
  print("Person might be survived")
else:
  print("Person might not be survived")

y_pred = model.predict(x_test)
print(np.column_stack((y_pred, y_test)))

from sklearn.metrics import accuracy_score
print("Accuracy of model: {0}%".format(accuracy_score(y_test, y_pred)*100))

